//////// Variables ////////

D_80137DB8 = 0x80137DB8; // size:0x2A0

// Unknown type
D_801132C0 = 0x801132C0; // size:0x1000

gCheatCodeCrc32Table = 0x800A0ED0; // type:u32 size:0x74

gCurrentLevel = 0x80130B70; // type:u32 size:0x4

dDefaultCraftForLevel = 0x8009EC50; // type:u32 size:0x4C

D_80130B40 = 0x80130B40; // size:0x2C

D_80109CB0 = 0x80109CB0; // type:char* size:0x24

//////// Main Stuff ////////
// All threads appear to have a thread ID of 0
// Seemingly thread ID is only used by the debugger, so this may not be a big deal

// Appears to be some sort of memory zero'ing function? 
// Handwritten (uses `cache` intstruction), directly below entry_point in memory
// Might be responsible for zero'ing out BSS? If that guess is right, D_8010D200 is the start of BSS
func_8000040C = 0x8000040C; // type:func

// Jumped to by entry_point
main = 0x8000161C; // type:func
gIdleThread = 0x8010D218; // type:OSThread size:0x1B0
// D_8010FED8 is the end(?) of the idle thread stack, I think

// gIdleThread's handler
thread1_idle = 0x800017A0; // type:func
gVideoThread = 0x8010D3D0; // type:OSThread size:0x1B0
// D_801163B0 is the end(?) of the video thread stack, I think

// gVideoThread's handler
thread3_video = 0x80001088; // type:func
D_8010D580 = 0x8010D580; // type:OSMesgQueue size:0x18
D_8010DFD0 = 0x8010DFD0; // type:OSMesg size:0x4
D_8010DDA0 = 0x8010DDA0; // type:OSThread size:0x1B0


// D_8010DDA0's handler
// Sets up a event handler for the Pre NMI interrupt
// It appears to handle setting the ViMode
func_800016AC = 0x800016AC; // type:func
D_8010DFD8 = 0x8010DFD8; // type:OSMesgQueue size:0x18
D_8010D598 = 0x8010D598; // type:OSMesg size:0x4

// Empty function?
func_80004FD0 = 0x80004FD0; // type:func

// Initialized the motor by the looks of it
func_80002C5C = 0x80002C5C; // type:func
gSIEventMesgQueue = 0x80110770; // type:OSMesgQueue size:0x18
// Based on its usage in `func_80002C5C` it has to be an OSPfs array
// But OSPfs' only have a size of 0x68
// ????? size = 0x88, x4
// Potenially this is a larger struct that contains OPfs' as its first member?
// Is also directly under the stack for D_8010FF70/func_80002E10
D_80110520 = 0x80110520; // size:0x220

func_80002F4C = 0x80002F4C; // type:func
D_8010FF70 = 0x8010FF70; // type:OSThread size:0x1B0
// D_8010FF70's stack, most likely
// D_80110120 = 0x80110120; // type:u8 size:0x400
// D_80110520 is the end of the stack

// D_8010FF70's handler
// Controller initialization at minimum
// Also does some reading of controller data
// Has a  while(1) loop in it
func_80002E10 = 0x80002E10; // type:func
gSIEventMesgBuf = 0x8010FF48; // type:OSMesg size:0x4
D_8010FF50 = 0x8010FF50; // type:OSMesgQueue size:0x18
D_8010FF68 = 0x8010FF68; // type:OSMesg size:0x4
gControllerStatuses = 0x80110788; // type:OSContStatus size:0x10
gControllerBits = 0x80110798; // type:u8 size:0x8
gControllerPads = 0x8010FF30; // type:OSContPad size:0x18

// Called after osContGetReadData in func_80002E10
// Probably something akin to `update_controller` from MK64
func_800027C0 = 0x800027C0; // type:func

func_800045E8 = 0x800045E8; // type:func
// 8 Messages
D_801107A0 = 0x801107A0; // type:OSMesg size:0x20
D_801107C0 = 0x801107C0; // type:OSMesgQueue size:0x18
// 8 Messages
D_801108A0 = 0x801108A0; // type:OSMesg size:0x20
// 8 Messages
D_801108C0 = 0x801108C0; // type:OSMesgQueue size:0xC0
D_80110980 = 0x80110980; // type:OSMesg size:0x4
D_80110990 = 0x80110990; // type:OSMesgQueue size:0x18

// a0 -> Source memory address (ROM, 0xB.......)
// a1 -> Destination memory address (RAM, 0x8.......)
// a2 -> DMA size
func_80003480 = 0x80003480; // type:func
// Array of 8 OSIoMesg?
D_801107E0 = 0x801107E0; // type:OSIoMesg size:0xC0

func_80005850 = 0x80005850; // type:func
D_80111288 = 0x80111288; // type:OSMesg size:0x4
D_80111290 = 0x80111290; // type:OSMesgQueue size:0x18

// Contains a while(1) loop
func_80005568 = 0x80005568; // type:func
// Unknown type of size 0x14, 256 entries total
D_801112B0 = 0x801112B0; // size:0x1400
// D_801126B0 seems related to it too
// D_801126B4 appears to be an index into this array

func_80019BF4 = 0x80019BF4; // type:func
D_8011A420 = 0x8011A420; // type:OSMesgQueue size:0x18
D_8011A8D0 = 0x8011A8D0; // type:OSMesg size:0x4

func_8001A058 = 0x8001A058; // type:func
D_80128C80 = 0x80128C80; // type:OSMesg size:0x4

func_8001C12C = 0x8001C12C; // type:func
D_80128CE0 = 0x80128CE0; // type:OSMesg size:0x4

D_80112AE0 = 0x80112AE0; // type:OSMesg size:0x4
D_8011A7E8 = 0x8011A7E8; // type:OSMesgQueue

// Individual size 0x18
D_80110BC0 = 0x80110BC0; // size:0x180

func_80003D64 = 0x80003D64; // type:func
// Unknown type of size 0x50 (4 entries)
D_80110A80 = 0x80110A80; // size:0x140

// Unknown type of size 0x74 (8 entries)
D_80110D60 = 0x80110D60; // size:0x3A0
// Index into D_80110D60
D_80111240 = 0x80111240; // size:0x4

func_80004AAC = 0x80004AAC; // type:func
// Unknown type of size 0x28 (8 entries)
D_80111100 = 0x80111100; // size:0x140

D_8010FEE0 = 0x8010FEE0; // type:OSMesgQueue size:0x18
