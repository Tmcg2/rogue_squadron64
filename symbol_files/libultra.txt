////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// Functions ///////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

bcmp           = 0x80029F60; // defined:true
bcopy          = 0x80034010; // defined:true
bzero          = 0x8002A080; // defined:true
corrupted      = 0x800315B8; // defined:true
corrupted_init = 0x80031404; // defined:true
cosf           = 0x8002B190; // defined:true
sinf           = 0x80033960; // defined:true
memcpy         = 0x800346F0; // defined:true
proutSprintf   = 0x80033CA0; // defined:true
sprintf        = 0x80033CC4; // defined:true
strlen         = 0x8003471C; // defined:true
strchr         = 0x80034744; // defined:true
_Printf        = 0x80035FD0; // defined:true
_Putfld        = 0x80035960; // defined:true
// There should be _Ldunscale somehwere near here, but
// I our version of libultra I guess its inlined/not a separate function?
_Genld         = 0x80036620; // defined:true
viMgrMain      = 0x80034F38; // defined:true

_Ldtob         = 0x80036B90; // defined:true
_Litob         = 0x80037270; // defined:true
_MakeMotorData = 0x8002D710; // defined:true

guMtxXFML      = 0x8002E3B0; // defined:true
guMtxCatL      = 0x8002E410; // defined:true
guMtxXFMF      = 0x8002E470; // defined:true
guMtxCatF      = 0x8002E510; // defined:true
guMtxF2L       = 0x8002E680; // defined:true
guMtxIdentF    = 0x8002E780; // defined:true
guMtxIdent     = 0x8002E808; // defined:true
guMtxL2F       = 0x8002E838; // defined:true
guPerspectiveF = 0x8002E950; // defined:true
guPerspective  = 0x8002EB80; // defined:true
guScaleF       = 0x80033370; // defined:true
guScale        = 0x800333C4; // defined:true

osAiSetFrequency       = 0x80029D20; // defined:true
osAiSetNextBuffer      = 0x80029E80; // defined:true
osEepromLongRead       = 0x8002A120; // defined:true
osEepromLongWrite      = 0x8002A1B0; // defined:true
osEepromProbe          = 0x8002A2A0; // defined:true
osEepromRead           = 0x8002A340; // defined:true
osEepromWrite          = 0x8002A660; // defined:true
osContStartQuery       = 0x8002AB80; // defined:true
osContGetQuery         = 0x8002AC04; // defined:true
osContStartReadData    = 0x8002AC30; // defined:true
osContGetReadData      = 0x8002ACBC; // defined:true
osContInit             = 0x8002AE50; // defined:true
osCreateMesgQueue      = 0x8002B300; // defined:true
osCreateThread         = 0x8002B330; // defined:true
osDestroyThread        = 0x8002B480; // defined:true
osDpGetCounters        = 0x8002B590; // defined:true
osDpSetStatus          = 0x8002B5E0; // defined:true
osGetTime              = 0x8002BF00; // defined:true
osGetCount             = 0x8002BF90; // defined:true
osInitialize           = 0x8002BFA0; // defined:true
osInvalDCache          = 0x8002C280; // defined:true
osInvalICache          = 0x8002C330; // defined:true
osJamMesg              = 0x8002C3B0; // defined:true
osEPiRawStartDma       = 0x8002CD80; // defined:true
osLeoDiskInit          = 0x8002CFB0; // defined:true
osMapTLBRdb            = 0x8002D370; // defined:true
osMotorStop            = 0x8002D3D0; // defined:true
osMotorStart           = 0x8002D570; // defined:true
osMotorInit            = 0x8002D88C; // defined:true
osPfsAllocateFile      = 0x8002EBE0; // defined:true
osPfsDeleteFile        = 0x800300F0; // defined:true
osPfsFreeBlocks        = 0x80030710; // defined:true
osPfsInitPak           = 0x80030AA0; // defined:true
osPfsChecker           = 0x80030D40; // defined:true
osPfsIsPlug            = 0x800317A0; // defined:true
osPfsReadWriteFile     = 0x80031BDC; // defined:true
osPfsRepairId          = 0x80032000; // defined:true
osPfsFindFile          = 0x80032260; // defined:true
osPiStartDma           = 0x80032420; // defined:true
osPiGetCmdQueue        = 0x80032530; // defined:true
osCreatePiManager      = 0x80032560; // defined:true
osCartRomInit          = 0x800326F0; // defined:true
osGetThreadPri         = 0x80032FB0; // defined:true
osPiRawStartDma        = 0x80033090; // defined:true
osPiRawReadIo          = 0x80033170; // defined:true
osRecvMesg             = 0x800331D0; // defined:true
osSendMesg             = 0x80033410; // defined:true
osSetEventMesg         = 0x80033560; // defined:true
osSetIntMask           = 0x80033630; // defined:true
osSetThreadPri         = 0x800336E0; // defined:true
osSetTimer             = 0x800337C0; // defined:true
osSpTaskLoad           = 0x80033E3C; // defined:true
osSpTaskStartGo        = 0x80033FCC; // defined:true
osSpTaskYield          = 0x80034430; // defined:true
osSpTaskYielded        = 0x80034450; // defined:true
osStartThread          = 0x800344E0; // defined:true
osStopThread           = 0x80034630; // defined:true
osViBlack              = 0x80034BE0; // defined:true
osViGetCurrentField    = 0x80034D90; // defined:true
osCreateViManager      = 0x80034DB0; // defined:true
osVirtualToPhysical    = 0x80035120; // defined:true
osViSetEvent           = 0x80035260; // defined:true
osViSetMode            = 0x800352D0; // defined:true
osViSetSpecialFeatures = 0x80035340; // defined:true
osViSwapBuffer         = 0x80035500; // defined:true
osWritebackDCache      = 0x800358B0; // defined:true
osWritebackDCacheAll   = 0x80035930; // defined:true
osYieldThread          = 0x80037510; // defined:true

_VirtualToPhysicalTask = 0x80033D20; // defined:true

__osAiDeviceBusy         = 0x80029F30; // defined:true
__osPackEepReadData      = 0x8002A55C; // defined:true
__osPackEepWriteData     = 0x8002A84C; // defined:true
__osEepStatus            = 0x8002A958; // defined:true
__osPackReadData         = 0x8002AD64; // defined:true
__osContGetInitData      = 0x8002AFC0; // defined:true
__osPackRequestData      = 0x8002B090; // defined:true
__osExceptionPreamble    = 0x8002B5F0; // defined:true
__osException            = 0x8002B600; // defined:true
__osEnqueueAndYield      = 0x8002BC1C; // defined:true
__osEnqueueThread        = 0x8002BD1C; // defined:true
__osPopThread            = 0x8002BD64; // defined:true
__osDispatchThread       = 0x8002BD74; // defined:true
__osCleanupThread        = 0x8002BEF0; // defined:true
__osGetSR                = 0x8002C230; // defined:true
__osDisableInt           = 0x8002C240; // defined:true
__osRestoreInt           = 0x8002C260; // defined:true
__osLeoInterrupt         = 0x8002C500; // defined:true
__osLeoAbnormalResume    = 0x8002CBA4; // defined:true
__osLeoResume            = 0x8002CC8C; // defined:true
__osContRamRead          = 0x8002DB70; // defined:true
__osPackRamReadData      = 0x8002DD8C; // defined:true
__osContRamWrite         = 0x8002DED0; // defined:true
__osPackRamWriteData     = 0x8002E0D4; // defined:true
__osContAddressCrc       = 0x8002E230; // defined:true
__osContDataCrc          = 0x8002E2E0; // defined:true
__osPfsDeclarePage       = 0x8002F064; // defined:true
__osClearPage            = 0x8002F2C8; // defined:true
__osSumcalc              = 0x8002F390; // defined:true
__osIdCheckSum           = 0x8002F3EC; // defined:true
__osRepairPackId         = 0x8002F454; // defined:true
__osCheckPackId          = 0x8002F86C; // defined:true
__osGetId                = 0x8002FA04; // defined:true
__osCheckId              = 0x8002FC60; // defined:true
__osPfsRWInode           = 0x8002FD5C; // defined:true
__osPfsSelectBank        = 0x8003007C; // defined:true
__osPfsReleasePages      = 0x800303D0; // defined:true
__osBlockSum             = 0x80030618; // defined:true
__osPfsGetStatus         = 0x80030860; // defined:true
__osPfsRequestOneChannel = 0x80030944; // defined:true
__osPfsGetOneChannelData = 0x80030A04; // defined:true
__osPfsRequestData       = 0x80031940; // defined:true
__osPfsGetInitData       = 0x80031A10; // defined:true
__osPfsGetNextPage       = 0x80031AE0; // defined:true
__osDevMgrMain           = 0x800327F0; // defined:true
__osEPiRawReadIo         = 0x80032C80; // defined:true
__osEPiRawWriteIo        = 0x80032E20; // defined:true
__osPiCreateAccessQueue  = 0x80032FD0; // defined:true
__osPiGetAccess          = 0x80033020; // defined:true
__osPiRelAccess          = 0x80033064; // defined:true
__osResetGlobalIntMask   = 0x80033310; // defined:true
__osSetFpcCsr            = 0x800335D0; // defined:true
__osSetGlobalIntMask     = 0x800335E0; // defined:true
__osSetSR                = 0x800336D0; // defined:true
__osSiCreateAccessQueue  = 0x800338A0; // defined:true
__osSiGetAccess          = 0x800338F0; // defined:true
__osSiRelAccess          = 0x80033934; // defined:true
__osSiRawStartDma        = 0x80033B20; // defined:true
__osSiDeviceBusy         = 0x80033BD0; // defined:true
__osSiRawReadIo          = 0x80033C00; // defined:true
__osSiRawWriteIo         = 0x80033C50; // defined:true
__osSpDeviceBusy         = 0x80034320; // defined:true
__osSpRawStartDma        = 0x80034350; // defined:true
__osSpSetPc              = 0x800343E0; // defined:true
__osSpSetStatus          = 0x80034420; // defined:true
__osSpGetStatus          = 0x800344D0; // defined:true
__osDequeueThread        = 0x80034790; // defined:true
__osTimerServicesInit    = 0x800347D0; // defined:true
__osTimerInterrupt       = 0x8003485C; // defined:true
__osSetTimerIntr         = 0x800349D4; // defined:true
__osInsertTimer          = 0x80034A48; // defined:true
__osSetCompare           = 0x80034BD0; // defined:true
__osViInit               = 0x80034C50; // defined:true
__osViGetCurrentContext  = 0x80035110; // defined:true
__osProbeTLB             = 0x800351A0; // defined:true
__osViSwapContext        = 0x80035550; // defined:true

__ull_rshift  = 0x8002D0B0; // defined:true
__ull_rem     = 0x8002D0DC; // defined:true
__ull_div     = 0x8002D118; // defined:true
__ll_lshift   = 0x8002D154; // defined:true
__ll_rem      = 0x8002D180; // defined:true
__ll_div      = 0x8002D1BC; // defined:true
__ll_mul      = 0x8002D218; // defined:true
__ull_divremi = 0x8002D248; // defined:true
__ll_mod      = 0x8002D2A8; // defined:true
__ll_rshift   = 0x8002D344; // defined:true
lldiv         = 0x800370E0; // defined:true
ldiv          = 0x800371E0; // defined:true

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// Variables ///////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

__osIntOffTable = 0x8003A120; // type:u8 size:0x20

_MotorStopData  = 0x8012E2E0; // type:OSPifRam size:0x100
_MotorStartData = 0x8012E3E0; // type:OSPifRam size:0x100
_motorstopbuf   = 0x8012E4E0; // type:u8 size:0x20
__motorstartbuf = 0x8012E500; // type:u8 size:0x20

__osContinitialized  = 0x800390D0; // type:u32
// s32 (*__osHwIntTable[5])(void)
__osHwIntTable       = 0x800390E0; // type:u32 size:0x14
__osShutdown         = 0x8003910C; // type:u32
// volatile u32
__OSGlobalIntMask    = 0x80039110; //
__osMotorinitialized = 0x80039120; // type:u32 size:0x10
__osPiDevMgr         = 0x80039130; // type:OSDevMgr size:0x1C
__osPiTable          = 0x8003914C; // type:OSPiHandle_s* size:0x4
__osCurrentHandle    = 0x80039150; // type:OSPiHandle* size:0x8
__osThreadTail       = 0x80039180; // type:OSThreadTail
__osRunQueue         = 0x80039188; // type:OSThread*
__osActiveQueue      = 0x8003918C; // type:OSThread*
__osRunningThread    = 0x80039190; // type:OSThread*
__osFaultedThread    = 0x80039194; // type:OSThread*
__osTimerList        = 0x800391A0; // type:OSTimer* size:0x4
__osViCurr           = 0x80039210; // type:OSViContext*
__osViNext           = 0x80039214; // type:OSViContext*
__osRcpImTable       = 0x8003A1B0; // type:u16 size:0x80
__osEepPifRam        = 0x8012CFD0; // type:OSPifRam size:0x40
__osContPifRam       = 0x8012D010; // type:OSPifRam size:0x40
__osContLastCmd      = 0x8012D050; // type:u8
__osMaxControllers   = 0x8012D051; // type:u8
__osEepromTimer      = 0x8012D058; // type:OSTimer size:0x20
__osEepromTimerQ     = 0x8012D078; // type:OSMesgQueue size:0x18
__osEepromTimerMsg   = 0x8012D090; // type:OSMesg size:0x4
__osFinalrom         = 0x8012D0A0; // type:u32
__osThreadSave       = 0x8012D0B0; // type:OSThread size:0x1B0
__osDiskHandle       = 0x8012E2D4; // type:OSPiHandle* size:0x4
__osPfsPifRam        = 0x8012E520; // type:OSPifRam size:0x40
// Should really be __OSEventState, but splat doesn't like that :(
__osEventStateTab    = 0x8012F7D0; // type:OSEventState size:0x7C
__osBaseTimer        = 0x8012F8B0; // type:OSTimer size:0x20
__osCurrentTime      = 0x8012F8D0; // type:OSTime size:0x8
__osBaseCounter      = 0x8012F8D8; // type:u32
__osViIntrCount      = 0x8012F8DC; // type:u32
__osTimerCounter     = 0x8012F8E0; // type:u32

viEventQueue         = 0x80130AA0; // type:OSMesgQueue size:0x18

CartRomHandle = 0x8012F730; // type:OSPiHandle size:0x74

// cosf
P    = 0x8003A0D0; // type:u64 size:40 allow_duplicated:True
rpi  = 0x8003A0F8; // type:u64 allow_duplicated:True
pihi = 0x8003A100; // type:u64 allow_duplicated:True
pilo = 0x8003A108; // type:u64 allow_duplicated:True
zero = 0x8003A110; // type:f32 allow_duplicated:True

// sinf
P    = 0x8003A230; // type:u64 size:40 allow_duplicated:True
rpi  = 0x8003A258; // type:u64 allow_duplicated:True
pihi = 0x8003A260; // type:u64 allow_duplicated:True
pilo = 0x8003A268; // type:u64 allow_duplicated:True
zero = 0x8003A270; // type:f32 allow_duplicated:True

__libm_qnan_f = 0x8003A170; // type:f32

// Static variable in `sptask`
tmp_task = 0x8012F870; // type:OSTask size:0x40

// Static variable in `aisetnextbuf`
hdwrBugFlag = 0x800390C0; // type:u8

__osPiAccessQueueEnabled = 0x80039160; // type:u32
piAccessBuf              = 0x8012F7B0; // type:OSMesg size:0x4
__osPiAccessQueue        = 0x8012F7B8; // type:OSMesgQueue size:0x18

__osSiAccessQueueEnabled = 0x80039170; // type:u32
siAccessBuf              = 0x8012F850; // type:OSMesg size:0x4
__osSiAccessQueue        = 0x8012F858; // type:OSMesgQueue size:0x18

vi = 0x800391B0; // type:OSViContext size:0x60

// s32[]
osTvType         = 0x80000300; // type:u32
osRomBase        = 0x80000308; // type:u32
osResetType      = 0x8000030C; // type:s32
osAppNMIBuffer   = 0x8000031C; // type:s32 size:0x40
osClockRate      = 0x80039100; // type:u64
osViClock        = 0x80039108; // type:u32
__osViDevMgr     = 0x80039220; // type:OSDevMgr size:0x1C
osViModeMpalLan1 = 0x80039240; // type:OSViMode size:0x50
osViModeNtscLan1 = 0x80039290; // type:OSViMode size:0x50
osViModePalLan1  = 0x800392E0; // type:OSViMode size:0x50
osViModeTable    = 0x80039330; // type:OSViMode[42] size:0xD20

leoDiskStack  = 0x8012D260; // type:u8 size:0x1000
LeoDiskHandle = 0x8012E260; // type:OSPiHandle size:0x74
piThread      = 0x8012E560; // type:OSThread size:0x1B0
piThreadStack = 0x8012E710; // type:char size=0x1000
piEventQueue  = 0x8012F710; // type:OSMesgQueue size:0x18
piEventBuf    = 0x8012F728; // type:OSMesg size=0x4
viThread      = 0x8012F8F0; // type:OSThread size:0x1B0
viThreadStack = 0x8012FAA0; // type:u8 size:0x1000
viEventBuf    = 0x80130AB8; // type:OSMesg size:0x14
viRetraceMsg  = 0x80130AD0; // type:OSIoMesg size:0x18
viCounterMsg  = 0x80130AE8; // type:OSIoMesg size:0x18
// Static variable in `viMgrMain`
retrace       = 0x80130B00; // type:u16

// Static variables in `xlitob`
ldigs = 0x8003A0A0; // type:asciz
udigs = 0x8003A0B4; // type:asciz

// Static variables in `xprintf`
spaces = 0x8003A050; // type:asciz
zeroes = 0x8003A074; // type:asciz

// Static const variables in `_Printf`
fchar = 0x8003A284; // type:asciz
fbit  = 0x8003A28C; // type:s32

// Static const varaible in xldtob
pows = 0x8003A380; // type:f64 size:0x48

////////////////////////////////////////////////////////////////////////////////
/////////////////////////////// Jump Table Stuff ///////////////////////////////
////////////////////////////////////////////////////////////////////////////////

__osIntTable  = 0x8003A140; // type:jtbl
jtbl_8003A190 = 0x8003A190; // type:jtbl
// _Printf
jtbl_8003A2A4 = 0x8003A2A4; // type:jtbl

// __osIntTable
IP6_Hdlr   = 0x8002B838; // type:jtbl_label
IP7_Hdlr   = 0x8002B844; // type:jtbl_label
counter    = 0x8002B850; // type:jtbl_label
cart       = 0x8002B870; // type:jtbl_label
rcp        = 0x8002B8C4; // type:jtbl_label
prenmi     = 0x8002BA04; // type:jtbl_label
sw2        = 0x8002BA60; // type:jtbl_label
sw1        = 0x8002BA80; // type:jtbl_label
redispatch = 0x8002BAB8; // type:jtbl_label
